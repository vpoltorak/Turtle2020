#BlueJ class context
comment0.target=SoundExplorer
comment0.text=\r\n\ This\ class\ allows\ you\ to\ explore\ a\ Sound.\ \ You\ can\ see\ the\ line\ drawing\r\n\ of\ the\ sound\ samples\ and\ play\ all\ or\ part\ of\ a\ sound.\ \ You\ can\ zoom\ in\ to\ see\r\n\ all\ the\ samples\ in\ the\ sound\ or\ zoom\ out\ to\ see\ the\ entire\ sound.\ \ You\r\n\ can\ click\ on\ the\ sound\ wave\ to\ see\ the\ value\ at\ that\ index.\r\n\ \r\n\ Copyright\ Georgia\ Institute\ of\ Technology\ 2004\r\n\ @author\ Keith\ McDermottt,\ gte047w@cc.gatech.edu\r\n\ @author\ Barb\ Ericson\ ericson@cc.gatech.edu\r\n
comment1.params=sound\ inStereo
comment1.target=SoundExplorer(SimpleSound,\ boolean)
comment1.text=\r\n\ Constructor\ that\ takes\ a\ sound\ and\ a\ boolean\ flag\r\n\ @param\ sound\ the\ sound\ to\ view\r\n\ @param\ inStereo\ true\ if\ you\ want\ to\ show\ it\ in\ stereo\r\n
comment10.params=
comment10.target=void\ updateIndexValues()
comment10.text=\r\n\ Method\ to\ update\ the\ index\ values\ to\ the\ current\ index\ position\r\n
comment11.params=indexPanel
comment11.target=void\ setUpIndexPanel(javax.swing.JPanel)
comment11.text=\r\n\ Method\ to\ set\ up\ the\ index\ panel.\ \ This\ panel\ has\ buttons\ for\ going\ to\r\n\ the\ first\ index,\ previous\ index,\ the\ current\ index\ label,\ the\ current\ index\r\n\ value\ or\ values\ (if\ in\ stereo),\ next\ index\ button,\ and\ a\ last\ index\ button\r\n\ @param\ indexPanel\ the\ panel\ to\ set-up\r\n
comment12.params=evt
comment12.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment13.params=evt
comment13.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment14.params=evt
comment14.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment15.params=evt
comment15.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment16.params=e
comment16.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment17.params=e
comment17.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment18.params=
comment18.target=void\ createInfoPanel()
comment18.text=\r\n\ Method\ to\ create\ the\ information\ panel\ which\ holds\ the\ index\ information,\ the\ value\r\n\ for\ the\ current\ index,\ and\ the\ zoom\ button\r\n
comment19.params=e
comment19.target=void\ mouseClicked(java.awt.event.MouseEvent)
comment19.text=\r\n\ Handle\ a\ mouse\ click\ event\r\n\ @param\ e\ the\ mouse\ event\r\n
comment2.params=ex
comment2.target=void\ catchException(java.lang.Exception)
comment2.text=\r\n\ Method\ to\ print\ out\ exception\ information\ \r\n\ @param\ ex\ the\ exception\ object\r\n
comment20.params=e
comment20.target=void\ mousePressed(java.awt.event.MouseEvent)
comment20.text=\r\n\ Method\ to\ handle\ a\ mouse\ press\r\n\ @param\ e\ the\ mouse\ event\r\n
comment21.params=e
comment21.target=void\ mouseReleased(java.awt.event.MouseEvent)
comment21.text=\r\n\ Method\ to\ handle\ a\ mouse\ release\r\n\ @param\ e\ the\ mouse\ event\r\n
comment22.params=e
comment22.target=void\ mouseEntered(java.awt.event.MouseEvent)
comment22.text=\r\n\ Method\ to\ handle\ a\ mouse\ entered\ event\r\n\ @param\ e\ the\ mouse\ event\ \r\n
comment23.params=e
comment23.target=void\ mouseExited(java.awt.event.MouseEvent)
comment23.text=\r\n\ Method\ to\ handle\ a\ mouse\ exited\ event\r\n\ @param\ e\ the\ mouse\ event\ \r\n
comment24.params=e
comment24.target=void\ mouseDragged(java.awt.event.MouseEvent)
comment24.text=\r\n\ Method\ to\ handle\ a\ mouse\ dragged\ event\r\n\ @param\ e\ the\ mouse\ event\ \r\n
comment25.params=e
comment25.target=void\ mouseMoved(java.awt.event.MouseEvent)
comment25.text=\r\n\ Method\ to\ handle\ a\ mouse\ move\ event\r\n\ @param\ e\ the\ mouse\ event\ \r\n
comment26.params=e
comment26.target=void\ update(javax.sound.sampled.LineEvent)
comment26.text=\r\n\ Method\ to\ handle\ the\ line\ event\ update\r\n\ @param\ e\ the\ line\ event\r\n
comment27.params=e
comment27.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment27.text=\r\n\ Method\ to\ handle\ an\ action\ event\r\n\ @param\ e\ the\ action\ event\r\n
comment28.params=
comment28.target=void\ checkScroll()
comment28.text=\r\n\ Method\ to\ check\ that\ the\ current\ position\ is\ in\ the\ viewing\ area\ and\ if\r\n\ not\ scroll\ to\ center\ the\ current\ position\ if\ possible\r\n
comment29.params=checkScrollFlag
comment29.target=void\ handleZoomIn(boolean)
comment29.text=\r\n\ Method\ to\ handle\ a\ zoom\ in\r\n
comment3.params=s
comment3.target=void\ setTitle(java.lang.String)
comment3.text=\r\n\ Method\ to\ set\ the\ title\ on\ the\ main\ window\r\n\ @param\ s\ the\ string\ to\ use\ as\ the\ title\ \r\n
comment30.params=index
comment30.target=void\ handleZoomIn(int)
comment30.text=\r\n\ Method\ to\ handle\ a\ zoom\ in\ to\ view\ all\ sample\ values\r\n\ @param\ index\ the\ index\ to\ use\ after\ the\ zoom\ in\r\n
comment31.params=
comment31.target=void\ handleZoomOut()
comment31.text=\r\n\ Method\ to\ handle\ a\ zoom\ out\ to\ view\ the\ entire\ sound\ wave\r\n
comment32.params=numFrames
comment32.target=void\ handleFramesPerPixel(int)
comment32.text=\r\n\ Method\ to\ handle\ an\ entry\ of\ the\ desired\ number\ of\ frames\ (samples)\ \r\n\ shown\ per\ pixel\r\n\ @param\ numFrames\ (the\ number\ of\ samples\ shown\ in\ a\ pixel)\r\n
comment33.params=base
comment33.target=void\ setBase(int)
comment33.text=\ \r\n\ Method\ to\ set\ the\ base\ for\ the\ index.\ \ The\ default\ is\ a\ base\ of\ 0.\r\n\ @param\ base\ the\ new\ base\ to\ use\ (for\ example\ use\ setBase(1))\r\n\ to\ use\ base\ 1\ instead\ of\ 0\r\n
comment4.params=
comment4.target=void\ createWindow()
comment4.text=\r\n\ Method\ to\ create\ the\ main\ window\ \r\n
comment5.params=name\ enabled\ panel
comment5.target=javax.swing.JButton\ makeButton(java.lang.String,\ boolean,\ javax.swing.JPanel)
comment5.text=\r\n\ Method\ to\ create\ the\ button\ and\ add\ it\ to\ the\ passed\ panel\r\n\ @param\ name\ the\ label\ for\ the\ button\r\n\ @param\ enabled\ if\ true\ set\ button\ enabled\ else\ disable\ it\r\n\ @param\ panel\ the\ panel\ to\ add\ the\ button\ to\r\n
comment6.params=
comment6.target=void\ clearSelection()
comment6.text=\r\n\ Method\ to\ clear\ the\ selection\ information\r\n
comment7.params=
comment7.target=void\ createPlayPanel()
comment7.text=\r\n\ Method\ to\ create\ the\ panel\ that\ has\ the\ buttons\ for\ playing\ all\ or\r\n\ part\ of\ the\ sound.\ \ Also\ shows\ information\ about\ the\ selection\ (if\ one)\r\n
comment8.params=e
comment8.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment9.params=
comment9.target=void\ createSoundPanel()
comment9.text=\r\n\ Method\ to\ create\ the\ panel\ for\ displaying\ the\ sound\ wave(s)\r\n
numComments=34
